<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Documentation</title><link>http://documentation-securonix.github.io/doc/</link><description>Recent content in Introduction on Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://documentation-securonix.github.io/doc/index.xml" rel="self" type="application/rss+xml"/><item><title>Sample</title><link>http://documentation-securonix.github.io/doc/docs/sample/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://documentation-securonix.github.io/doc/docs/sample/</guid><description>Sample # sample</description></item><item><title>Sample Post</title><link>http://documentation-securonix.github.io/doc/docs/sample_post/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://documentation-securonix.github.io/doc/docs/sample_post/</guid><description>Heading # Heading 2 # Sample content</description></item><item><title/><link>http://documentation-securonix.github.io/doc/docs/example/Content-Management/Commit_Content/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://documentation-securonix.github.io/doc/docs/example/Content-Management/Commit_Content/</guid><description>Commit Content # When you commit your content, all information required for selected policies and parsers are committed. However, you can decide if you want to commit any supporting information or not. The supporting information for policies are tier-2 checks and workflow, and for parser is data dictionary.
Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</description></item><item><title/><link>http://documentation-securonix.github.io/doc/docs/example/Content-Management/Deploy_Content/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://documentation-securonix.github.io/doc/docs/example/Content-Management/Deploy_Content/</guid><description>Deploy Content # When you download content using Content Management, the local content folder is updated. If any new content is available, it is displayed in the content category. You have to deploy the content before you can use it in SNYPR.
Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</description></item><item><title/><link>http://documentation-securonix.github.io/doc/docs/example/Content-Management/New_Features/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://documentation-securonix.github.io/doc/docs/example/Content-Management/New_Features/</guid><description>New Features # Table of Contents # Problem Statement Objective Prerequisites Steps From Content Development Perspective Parsers Ownership Tracking Allowed Changes Restricted Changes From Content Admin Perspective Parsers New Improved Deploy Action Manage Content Daily Housekeeping Job Policies Manage Content Deprecate Policies 1 Problem Statement # Customers donâ€™t have an option to update customized securonix OOTB parsers. Application lacks ownership tracking of the parser at a granular level.
2 Objective # Resource groups require a certain level of customization specific to a customer or tenant.</description></item><item><title/><link>http://documentation-securonix.github.io/doc/docs/example/hidden/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://documentation-securonix.github.io/doc/docs/example/hidden/</guid><description>This page is hidden in menu # Quondam non pater est dignior ille Eurotas # Latent te facies # Lorem markdownum arma ignoscas vocavit quoque ille texit mandata mentis ultimus, frementes, qui in vel. Hippotades Peleus pennas conscia cuiquam Caeneus quas.
Pater demittere evincitque reddunt Maxime adhuc pressit huc Danaas quid freta Soror ego Luctus linguam saxa ultroque prior Tatiumque inquit Saepe liquitur subita superata dederat Anius sudor Cum honorum Latona # O fallor in sustinui iussorum equidem.</description></item><item><title/><link>http://documentation-securonix.github.io/doc/docs/example/Synpr-Content/Connectors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://documentation-securonix.github.io/doc/docs/example/Synpr-Content/Connectors/</guid><description>Connectors # SNYPR provides out-of-box connectors to import activity events from various datasources. Before you can setup the ingestion process, you have to check if an out-of-box connector is available for the datasource. There are three scenarios that can occur:
The out-of-box connector is available. The out-of-box connector is available but parser is not available. The out-of-box connector is not available.</description></item><item><title/><link>http://documentation-securonix.github.io/doc/docs/example/Synpr-Content/Data-dictionary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://documentation-securonix.github.io/doc/docs/example/Synpr-Content/Data-dictionary/</guid><description>Data Dictionary # Data Dictionary simplifies the ingestion, analytics, and hunting processes by providing consistent and easy to understand labels for data ingested from various datasources. These labels provide uniformity to data ingested from multiple datasources within a functionality.
Content developers can use these mapped labels to create policies that can be used for multiple datasources. This reduces the time and effort a content developer has to spend on creating policies for different datasources.</description></item><item><title/><link>http://documentation-securonix.github.io/doc/docs/example/Synpr-Content/Getting_Started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://documentation-securonix.github.io/doc/docs/example/Synpr-Content/Getting_Started/</guid><description>Commit Content # SNYPR content is categorized by functionality. Functionality is a category that defines a datasource type. For example: Web Proxy is a functionality and Blue Coat Proxy is a datasource. By categorizing datasources by functionality, SNYPR can apply similar parsers, policies, and threat models to all datasources with similar functionality.
The functionality determines what content is available when you import the datasource. For a list of functionality supported by SNYPR, see Supported Functionality.</description></item></channel></rss>