[{"id":0,"href":"/doc/docs/example/Content-Management/Deploy_Content/","title":"Deploy Content","section":"Content Management","content":" Deploy Content # When you download content using Content Management, the local content folder is updated. If any new content is available, it is displayed in the content category. You have to deploy the content before you can use it in SNYPR.\nYou can download and deploy the content from the Securonix content library using Menu \u0026gt; Admin \u0026gt; Content Management. The Content Update screen is displayed.\nThe Content Update screen provides the following:\nExisting Content: Displays the current content version deployed in SNYPR. Check for Updates: Allows you to check and download the updated content. Category: Lists content categories that you can download and deploy from Content Management. The 4. number indicates the total number of updates (updated content and new content). Update Content: Lists if any updates are available for existing content. New Content: Lists if any new content is available for deployment. Available Content: Lists the content available for deployment. It also provides information such as current version of the content and the available version of the content. Update Log: Displays the information of the last update. Downloading content # To download the content from the Securonix content library, perform the following:\nNavigate to Menu \u0026gt; Admin \u0026gt; Content Management. The Content Management screen is displayed. Click Check for Updates. If there are any updated or new content, the Category displays the total number of updates and new content. "},{"id":1,"href":"/doc/docs/example/Synpr-Content/Getting_Started/","title":"Getting Started","section":"Synpr Content","content":" Commit Content # SNYPR content is categorized by functionality. Functionality is a category that defines a datasource type. For example: Web Proxy is a functionality and Blue Coat Proxy is a datasource. By categorizing datasources by functionality, SNYPR can apply similar parsers, policies, and threat models to all datasources with similar functionality.\nThe functionality determines what content is available when you import the datasource. For a list of functionality supported by SNYPR, see Supported Functionality.\nConnectors and Parsers # A connector is used to bring data in SNYPR. The type of connector is called Collection Method. Each datasource can have multiple collection methods. You can use following types of connectors in SNYPR:\nAPI connections: Stream data from a datasource.\nSyslog event messages: Stream from a logging server or import as a file.\nFile: Upload a delimited, Regex, JSON, etc. file from a local machine or RIN. Each connector includes a parser that normalizes data so it can be easily read and translated by a computer. The type of parser is called the Format. Some parsing techniques used in SNYPR are:\nDelimited fields (pipe, comma, etc)\nCapturing Groups\nCommon Event Format (CEF)\nKey-Value Pair\nSNYPR 6.4 includes Data Dictionary that provides consistent and easy to understand labels for data ingested from various datasources. These labels provide uniformity to data ingested from multiple datasources within a functionality.\nReports Reports # This is tab Reports content.\nSNYPRContent includes custom reports for each functionality that provide transparency into the activity on your network to identify security issues and meet compliance requirements.\nDashboards Dashboards # This is tab Dashboards content.\nSNYPRContent features custom dashboards that visualize the most relevant information for each functionality to monitor compliance issues and gain data insights into various types of policy violations and threats in your environment.\nPolicies Policies # This is tab Policies content.\nPolicies are the checks run on each device to detect threat indicators. You can enable, disable, or delete policies when you import the datasource.\n"},{"id":2,"href":"/doc/docs/example/Web-Services/REST_api/","title":"Rest API","section":"Web Services","content":" REST API Categories # This section includes a list of REST API categories and requests. Before running any APIs, you must generate a token using Generate Token API. Token is used for authentication. Once your token is expired, you must generate it.\nAuth # Generate and validate authentication tokens.\nGenerate Token ... Markdown content # Request type: GET\n# Code block \u0026#34;{{url}}/ws/token/generate\u0026#34; To use a REST API with SNYPR, you must be authenticated. You can use the Generate Token API to authenticate and obtain a token, which you must then use with every API request.\nBase URL {{url}} It must be in the following format: https:///Snypr Request # # Code block curl --request GET \\ --url \u0026#39;http://{{url}}/ws/token/generate\u0026#39; \\ --header \u0026#39;password: {{password}}\u0026#39; \\ --header \u0026#39;username: {{username}}\u0026#39; \\ --header \u0026#39;validity: 365\u0026#39; Sample Response # 530bf219-5360-41d3-81d1-8b4d6f75956d "},{"id":3,"href":"/doc/docs/example/Content-Management/Commit_Content/","title":"Commit Content","section":"Content Management","content":" Commit Content # When you commit your content, all information required for selected policies and parsers are committed. However, you can decide if you want to commit any supporting information or not. The supporting information for policies are tier-2 checks and workflow, and for parser is data dictionary.\nCommitting Policy # To commit policies to the Securonix content library, perform the following:\nNavigate to Menu \u0026gt; Admin \u0026gt; Content Management. The Content Management screen is displayed.\nClick Commit Content. The Commit Content section is displayed.\nSelect a functionality to commit policies in the Select Functionality drop-down list.\nSelect policies that you want to commit.\nSelect Export \u0026amp; Commit. The Commit Policy screen displays the list of files that will be committed and an option to select supporting content.\nEnter the commit message and select any supporting content that you want to commit.\nClick Commit. The policy is committed. Similarly, you can commit parsers.\n"},{"id":4,"href":"/doc/docs/example/Synpr-Content/Connectors/","title":"Connectors","section":"Synpr Content","content":" Connectors # SNYPR provides out-of-box connectors to import activity events from various datasources. Before you can setup the ingestion process, you have to check if an out-of-box connector is available for the datasource. There are three scenarios that can occur:\nThe out-of-box connector is available. The out-of-box connector is available but parser is not available. The out-of-box connector is not available.\n"},{"id":5,"href":"/doc/docs/example/Content-Management/New_Features/","title":"New Features","section":"Content Management","content":" New Features # Customers don’t have an option to update customized securonix OOTB parsers. Application lacks ownership tracking of the parser at a granular level.\nResource groups require a certain level of customization specific to a customer or tenant. Eg: Geolocation Enrichment, IP Attribution, TPI enrichment,etc. Improved parser data flow and content management deploy logic allows the users to retain the Customer created content and receive updates to Securonix created content.\n1 Prerequistes # SYNPR 6.4 access Role - ROLE_CONTENT_ADMIN or ROLE_CONTENT_DEVELOPER Any updates to Parsers or Policies 2 Steps # 2.1 From Content Development Perspective # 2.1.1 Parsers # 2.1.1.1 Ownership Tracking # Ownership changes to ClientCreated (from SecuronixCreated) when Major Changes are made. This employs granular tracking which was not available previously. Line Filters and Action Filters can be updated but Derived Fields and Categorization Enrichments are not tracked in this ownership change. Categorization Enrichments are restricted (covered under Restricted Changes below). However, this ownership tracking currently only applies to Securonix owned Parsers (i.e. starting with SCNX_ or having CRPid as less than 1 Million).\nVideo/Loom integration # 2.1.1.2 Allowed Changes # Changes to Geolocation, TPI, Lookups, Activelists and IP Attribution are all allowed to Clients and do not require the creation of a CUST_ parser.\nFill in the relevant details then click Save \u0026amp; Next on the top right of the screen:\nOn the next screen (Parser Management), Click on Conditional Actions and then Add Condition:\nFill in the details as required and in the “Select Actions for Above Conditions” section, choose “Geolocate Attributes” or something else except the first 2 (Set Event Severity, Set Event Category) since those are restricted changes. Fill in the data as required and click on Save at the bottom of the screen. Finally, click on Save \u0026amp; Next at the top right of the screen:\nYou will see that a pop up screen will appear that says you can either Save the changes to overwrite the existing parser (since this is an Allowed Change) or choose Save As to make a new copy of the Parser:\n2.1.1.3 Restricted Changes # Categorization Enrichments are not allowed. For example, Set Event Severity and Set Event Category are not allowed to be changed by Clients. If a Client wants to modify these, they will be forced to create a CUST_ parser.\nFill in the relevant details then click Save \u0026amp; Next on the top right of the screen:\nOn the next screen (Parser Management), Click on Conditional Actions and then Add Condition:\nFill in the details as required and in the “Select Actions for Above Conditions” section, choose either “Set Event Severity” or “Set Event Category” since these 2 are restricted changes. Fill in the data as required and click on Save at the bottom of the screen. Finally, click on Save \u0026amp; Next at the top right of the screen:\nYou will see that a pop up screen will appear that says you need to Save the settings as a New Parser:\nThis is because this is a restricted change and will create a CUST_ parser instead of affecting the SCNX_ parser.\n2.2 From Content Admin Perspective # 2.2.1 Parsers # 2.2.1.1 New Improved Deploy Action # Till now the Deploy Parser action to update Parser used to overwrite any Line Filter Customizations that the client had made. The new improved deploy action allows clients to keep their own Line Filters customizations on Parsers and still get them updated to the newest versions when they are available. This is done by showing a popup when clicking the Deploy button which gives the client the choice to overwrite the Line Filters or not.\nHere, ticking the first option will overwrite the line filters that the customer might have modified (essentially replacing the parser with the latest OOTB parser) while unticking it will ensure that the parser is updated to the latest version while keeping the line filter customizations that the customer did as-is. The second option is basically a confirmation checkbox and the deploy button becomes clickable only when this is ticked.\n2.2.1.2 Manage Content # The Manage Content screen allows a Parser to be force deployed and resetted back to the Securonix OOTB Parser by reading the latest data from the Data folder and overwriting the customized data. This means any customization that the Client has done (and which may or may not have resulted in any corruption be it intentional or otherwise) will be wiped out and replaced with the OOTB Parser.\n2.2.1.3 Daily Housekeeping Job # A dedicated job that runs every 24 hours. This job will check if there are any new parsers in the CRP folders and automatically deploys them in the CRP table. This job also runs when a new datasource is added for the first time.\n2.2.2 Policies # 2.2.2.1 Manage Content # The Manage Content screen allows a Policy to be force deployed and resetted back to the Securonix OOTB Policy by reading the latest data from the Data folder and overwriting the customized data. This means any customization that the Client has done (and which may or may not have resulted in any corruption be it intentional or otherwise) will be wiped out and replaced with the OOTB Policy.\n2.2.2.2 Deprecate Policies # There are 2 ways to deprecate a policy:\nDevelopers can simply remove the config files corresponding to that policy from the SVN repository. This will automatically start the counter (in a range of 60-90 days). This is to ensure that clients have sufficient time to either clone the policy or create a duplicate version of the policy if they need it or they can modify and retain the policy.\nWe can set the configuration of the policy from the UI and set a user defined counter which can be any number of days (even less than 60 days if needed). This can be useful in case there is a vendor deprecation or functionality deprecation in play.\nTwo scenarios can arise here:\nIf there is a violation, preserve the violation, disable the policy and under “Policy Violation” show that policy is deprecated. Additionally, the user is not allowed to re-enable them.\nIf there is no violation, remove it under “Policy Violation”.\n"},{"id":6,"href":"/doc/docs/example/Synpr-Content/Data-dictionary/","title":"Data Dictionary","section":"Synpr Content","content":" Data Dictionary # Data Dictionary simplifies the ingestion, analytics, and hunting processes by providing consistent and easy to understand labels for data ingested from various datasources. These labels provide uniformity to data ingested from multiple datasources within a functionality.\nContent developers can use these mapped labels to create policies that can be used for multiple datasources. This reduces the time and effort a content developer has to spend on creating policies for different datasources. The unified labels help security analysts to get valuable context and query data efficiently in Spotter.\nAs part of the out-of-box content, Securonix provides functionalities with new labels mapped to SNYPR attributes. You can view and edit these labels from the Data Dictionary screen.\nOnly users with the role as ROLE_CONTENT_ADMIN can access the Data Dictionary screen. This role can be assigned from Menu \u0026gt; Administrator \u0026gt; Access Control \u0026gt; User.\nWhat are Securonix Attributes? # SNYPR uses an Open Event Format (OEF) schema built on the ArcSight Common Event Format for the transfer of information. OEF uses common attributes to consistently use the same attribute in SNYPR to represent the same attributes from disparate data sources. This enables SNYPR to provide content for datasources based on their functionality, even if the datasources use entirely different conventions for their attributes.\nWhy is the OEF Important? # Many organizations have adopted big data technologies to build vast data lakes to store and process event data. The goal of the data lake is simple: store once and use multiple times.\nOEF provides a standardized framework for the storage, streaming, querying, and analyzing of all types of machine generated events. Events generated by devices, applications, network sensors, and other environment sensors must be stored, processed, queried, and analyzed in order to meet a number of objectives, such as:\nBusiness Process Monitoring Decision Making Performance Monitoring Security Monitoring Compliance requirements Fraud detection Forensic investigations Several well-known formats for structuring event data include Syslog, CLF, ELF, CEF, LEEF, CIM, CEE, IDMEF, etc. System and application developers may chose any of these formats when writing audit events or log messages, or can chose from their own format.\nNo one knows exactly how the data we are gather today will be used in the future, but by storing data in an OEF (the widely adopted standard), organizations can confidently control and use their data, no matter the analytical technique or technology that may come along.\n"},{"id":7,"href":"/doc/docs/example/Content-Management/","title":"Content Management","section":"Features Available","content":" Content Management # Content Management allows detection engineers to seamlessly deploy content (policies and parsers) in their environment. The Securonix content team has a content library where they upload new and modified content to share with customers. Customers have their own local content repository in the file system located at \u0026ldquo;$SECURONIX_HOME/content/data\u0026rdquo;. Content administrators or detection engineers can efficiently download new and updated content, and deploy it in their SNYPR application. The following types of content can be deployed using Content Management:\nParsers Third Party Intelligence Data Dictionary Active List Lookup Tables Workflow Policy Threat Models Content Management has the following features:\nContent Update: Allows you to download and deploy content from the Securonix content library to the local repository. The Securonix content library stores new content and updates to the existing content. Commit Content: Allows you to version control your content by committing it to the Custom content library. The Custom content library is unique for each customer, and stores content created and modified by a customer. The following illustration depicts the content workflow:\nPrerequisites # The following prerequisites are required to access Content Management:\nThe Securonix content library access details must be configured at Menu \u0026gt; Admin \u0026gt; Settings \u0026gt; Content Library.\nA user account with role as ROLE_CONTENT_ADMIN. When the ROLE_CONTENT_ADMIN is not assigned to the user, the Content Management option is not available.\nA user account with role as ROLE_COMMIT_CONTENT to commit content from Content Management. "},{"id":8,"href":"/doc/docs/example/hidden/","title":"Hidden","section":"Features Available","content":" This page is hidden in menu # Quondam non pater est dignior ille Eurotas # Latent te facies # Lorem markdownum arma ignoscas vocavit quoque ille texit mandata mentis ultimus, frementes, qui in vel. Hippotades Peleus pennas conscia cuiquam Caeneus quas.\nPater demittere evincitque reddunt Maxime adhuc pressit huc Danaas quid freta Soror ego Luctus linguam saxa ultroque prior Tatiumque inquit Saepe liquitur subita superata dederat Anius sudor Cum honorum Latona # O fallor in sustinui iussorum equidem. Nymphae operi oris alii fronde parens dumque, in auro ait mox ingenti proxima iamdudum maius?\nreality(burnDocking(apache_nanometer), pad.property_data_programming.sectorBrowserPpga(dataMask, 37, recycleRup)); intellectualVaporwareUser += -5 * 4; traceroute_key_upnp /= lag_optical(android.smb(thyristorTftp)); surge_host_golden = mca_compact_device(dual_dpi_opengl, 33, commerce_add_ppc); if (lun_ipv) { verticalExtranet(1, thumbnail_ttl, 3); bar_graphics_jpeg(chipset - sector_xmp_beta); } Fronde cetera dextrae sequens pennis voce muneris # Acta cretus diem restet utque; move integer, oscula non inspirat, noctisque scelus! Nantemque in suas vobis quamvis, et labori!\nvar runtimeDiskCompiler = home - array_ad_software; if (internic \u0026gt; disk) { emoticonLockCron += 37 + bps - 4; wan_ansi_honeypot.cardGigaflops = artificialStorageCgi; simplex -= downloadAccess; } var volumeHardeningAndroid = pixel + tftp + onProcessorUnmount; sector(memory(firewire + interlaced, wired)); "},{"id":9,"href":"/doc/docs/example/Synpr-Content/","title":"Synpr Content","section":"Features Available","content":" Synper Content # SNYPR Content is a set of out-of-the-box connectors, parsers, reports, dashboards, policies, and threat models for datasources that can be ingested and used in SNYPR. SNYPR 6.4 introduces Content Management to update and deploy content in a couple of steps. The Securonix content team has a master repository where they upload new content to share. Customers have their own local content repository in the file system located at \u0026ldquo;$SECURONIX_HOME/content/data\u0026rdquo;. Content administrators or detection engineers can efficiently download new updates and deploy new content in their SNYPR environment.\nExample # Getting Started Commit Content # SNYPR content is categorized by functionality. Functionality is a category that defines a datasource type. For example: Web Proxy is a functionality and Blue Coat Proxy is a datasource. By categorizing datasources by functionality, SNYPR can apply similar parsers, policies, and threat models to all datasources with similar functionality. The functionality determines what content is available when you import the datasource. For a list of functionality supported by SNYPR, see Supported Functionality. Connectors Connectors # SNYPR provides out-of-box connectors to import activity events from various datasources. Before you can setup the ingestion process, you have to check if an out-of-box connector is available for the datasource. There are three scenarios that can occur: The out-of-box connector is available. The out-of-box connector is available but parser is not available. The out-of-box connector is not available. Data Dictionary Data Dictionary # Data Dictionary simplifies the ingestion, analytics, and hunting processes by providing consistent and easy to understand labels for data ingested from various datasources. These labels provide uniformity to data ingested from multiple datasources within a functionality. Content developers can use these mapped labels to create policies that can be used for multiple datasources. This reduces the time and effort a content developer has to spend on creating policies for different datasources. "},{"id":10,"href":"/doc/docs/example/Web-Services/","title":"Web Services","section":"Features Available","content":" Web Services/REST API # Application Programing Interface (API) allows you to interface between two applications. It provides a communication channel to request for information or perform a task, and receive a response.\nSNYPR provides a list of Representational State Transfer (REST) APIs for third-party applications to communicate with SNYPR. Third-party applications can also perform the following:\nRetrieve information from SNYPR, such as activity events, violations alerts, and metrics on incidents created. Perform selective actions on incidents, such as changing a workflow, status, or assignee. REST API is a web service and it uses HTTP or HTTPS protocol to communicate with other applications. Rest API defines a set of functions, such as GET, POST, PUT, DELETE, and POST, that are used by developers to perform requests and receive responses.\nNote:\nIn the 6.3.1 release, every SNYPR web service requires token based authentication for better security. Earlier, there was an option to disable token based authentication. If you have disabled it in the previous version of SNYPR, you have to add the token authentication for all your SNYPR webservices. ou can develop and test REST APIs in any API development tool such as Postman, Swagger, or SOAP UI. In this document, we have used Postman to test the REST APIs.\nThe following REST APIs are available:\nAPI Category Description Auth Allows you to generate and validate tokens. It includes the following APIs: \\ Generate Token Validate Token Renew Token "}]