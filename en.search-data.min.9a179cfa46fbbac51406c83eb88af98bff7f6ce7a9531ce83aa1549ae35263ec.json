[{"id":0,"href":"/doc/docs/example/","title":"Features Available","section":"Docs","content":" Features Available # Code Snippet blocks # # Python Code print(\u0026#34;This is a sample post to show code snippets and gif/videos\u0026#34;) print(\u0026#34;I added line numbers to the code snippet!\u0026#34;) # Python Code print(\u0026#34;This is a sample post for code snippet 2\u0026#34;) print(\u0026#34;I added line numbers to the code snippet!\u0026#34;) GIF feature # Adding a border:\nThe GIF works!\nTabs # Showcase multiple documentation for different OS/versions side by side\nMacOS MacOS # This is tab MacOS content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nLinux Linux # This is tab Linux content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nWindows Windows # This is tab Windows content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nVideo/Loom integration # "},{"id":1,"href":"/doc/docs/sample/","title":"Sample","section":"Docs","content":" Sample # sample\n"},{"id":2,"href":"/doc/docs/sample_post/","title":"Sample Post","section":"Docs","content":" Heading # Heading 2 # Sample content\n"},{"id":3,"href":"/doc/docs/example/Content-Management/","title":"Content Management","section":"Features Available","content":" Content Management # Content Management allows detection engineers to seamlessly deploy content (policies and parsers) in their environment. The Securonix content team has a content library where they upload new and modified content to share with customers. Customers have their own local content repository in the file system located at \u0026ldquo;$SECURONIX_HOME/content/data\u0026rdquo;. Content administrators or detection engineers can efficiently download new and updated content, and deploy it in their SNYPR application. The following types of content can be deployed using Content Management:\nParsers Third Party Intelligence Data Dictionary Active List Lookup Tables Workflow Policy Threat Models Example # Commit Content Commit Content # When you commit your content, all information required for selected policies and parsers are committed. However, you can decide if you want to commit any supporting information or not. The supporting information for policies are tier-2 checks and workflow, and for parser is data dictionary. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Deploy Content Deploy Content # When you download content using Content Management, the local content folder is updated. If any new content is available, it is displayed in the content category. You have to deploy the content before you can use it in SNYPR. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. New Features New Features # Table of Contents # Problem Statement Objective Prerequisites Steps From Content Development Perspective Parsers Ownership Tracking Allowed Changes Restricted Changes From Content Admin Perspective Parsers New Improved Deploy Action Manage Content Daily Housekeeping Job Policies Manage Content Deprecate Policies 1 Problem Statement # Customers don’t have an option to update customized securonix OOTB parsers. Application lacks ownership tracking of the parser at a granular level. 2 Objective # Resource groups require a certain level of customization specific to a customer or tenant. "},{"id":4,"href":"/doc/docs/example/Content-Management/Commit_Content/","title":"Commit Content","section":"Content Management","content":" Commit Content # When you commit your content, all information required for selected policies and parsers are committed. However, you can decide if you want to commit any supporting information or not. The supporting information for policies are tier-2 checks and workflow, and for parser is data dictionary.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"},{"id":5,"href":"/doc/docs/example/Content-Management/Deploy_Content/","title":"Deploy Content","section":"Content Management","content":" Deploy Content # When you download content using Content Management, the local content folder is updated. If any new content is available, it is displayed in the content category. You have to deploy the content before you can use it in SNYPR.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"},{"id":6,"href":"/doc/docs/example/Content-Management/New_Features/","title":"New Features","section":"Content Management","content":" New Features # Table of Contents # Problem Statement Objective Prerequisites Steps From Content Development Perspective Parsers Ownership Tracking Allowed Changes Restricted Changes From Content Admin Perspective Parsers New Improved Deploy Action Manage Content Daily Housekeeping Job Policies Manage Content Deprecate Policies 1 Problem Statement # Customers don’t have an option to update customized securonix OOTB parsers. Application lacks ownership tracking of the parser at a granular level.\n2 Objective # Resource groups require a certain level of customization specific to a customer or tenant. Eg: Geolocation Enrichment, IP Attribution, TPI enrichment,etc. Improved parser data flow and content management deploy logic allows the users to retain the Customer created content and receive updates to Securonix created content.\n3 Prerequistes # SYNPR 6.4 access Role - ROLE_CONTENT_ADMIN or ROLE_CONTENT_DEVELOPER Any updates to Parsers or Policies 4 Steps # 4.1 From Content Development Perspective # 4.1.1 Parsers # 4.1.1.1 Ownership Tracking # Ownership changes to ClientCreated (from SecuronixCreated) when Major Changes are made. This employs granular tracking which was not available previously. Line Filters and Action Filters can be updated but Derived Fields and Categorization Enrichments are not tracked in this ownership change. Categorization Enrichments are restricted (covered under Restricted Changes below). However, this ownership tracking currently only applies to Securonix owned Parsers (i.e. starting with SCNX_ or having CRPid as less than 1 Million).\n4.1.1.2 Allowed Changes # Changes to Geolocation, TPI, Lookups, Activelists and IP Attribution are all allowed to Clients and do not require the creation of a CUST_ parser.\nFill in the relevant details then click Save \u0026amp; Next on the top right of the screen:\nOn the next screen (Parser Management), Click on Conditional Actions and then Add Condition:\nFill in the details as required and in the “Select Actions for Above Conditions” section, choose “Geolocate Attributes” or something else except the first 2 (Set Event Severity, Set Event Category) since those are restricted changes. Fill in the data as required and click on Save at the bottom of the screen. Finally, click on Save \u0026amp; Next at the top right of the screen:\nYou will see that a pop up screen will appear that says you can either Save the changes to overwrite the existing parser (since this is an Allowed Change) or choose Save As to make a new copy of the Parser:\n4.1.1.3 Restricted Changes # Categorization Enrichments are not allowed. For example, Set Event Severity and Set Event Category are not allowed to be changed by Clients. If a Client wants to modify these, they will be forced to create a CUST_ parser.\nFill in the relevant details then click Save \u0026amp; Next on the top right of the screen:\nOn the next screen (Parser Management), Click on Conditional Actions and then Add Condition:\nFill in the details as required and in the “Select Actions for Above Conditions” section, choose either “Set Event Severity” or “Set Event Category” since these 2 are restricted changes. Fill in the data as required and click on Save at the bottom of the screen. Finally, click on Save \u0026amp; Next at the top right of the screen:\nYou will see that a pop up screen will appear that says you need to Save the settings as a New Parser:\nThis is because this is a restricted change and will create a CUST_ parser instead of affecting the SCNX_ parser.\n4.2 From Content Admin Perspective # 4.2.1 Parsers # 4.2.1.1 New Improved Deploy Action # Till now the Deploy Parser action to update Parser used to overwrite any Line Filter Customizations that the client had made. The new improved deploy action allows clients to keep their own Line Filters customizations on Parsers and still get them updated to the newest versions when they are available. This is done by showing a popup when clicking the Deploy button which gives the client the choice to overwrite the Line Filters or not.\nHere, ticking the first option will overwrite the line filters that the customer might have modified (essentially replacing the parser with the latest OOTB parser) while unticking it will ensure that the parser is updated to the latest version while keeping the line filter customizations that the customer did as-is. The second option is basically a confirmation checkbox and the deploy button becomes clickable only when this is ticked.\n4.2.1.2 Manage Content # The Manage Content screen allows a Parser to be force deployed and resetted back to the Securonix OOTB Parser by reading the latest data from the Data folder and overwriting the customized data. This means any customization that the Client has done (and which may or may not have resulted in any corruption be it intentional or otherwise) will be wiped out and replaced with the OOTB Parser.\n4.2.1.3 Daily Housekeeping Job # A dedicated job that runs every 24 hours. This job will check if there are any new parsers in the CRP folders and automatically deploys them in the CRP table. This job also runs when a new datasource is added for the first time.\n4.2.2 Policies # 4.2.2.1 Manage Content # The Manage Content screen allows a Policy to be force deployed and resetted back to the Securonix OOTB Policy by reading the latest data from the Data folder and overwriting the customized data. This means any customization that the Client has done (and which may or may not have resulted in any corruption be it intentional or otherwise) will be wiped out and replaced with the OOTB Policy.\n4.2.2.2 Deprecate Policies # There are 2 ways to deprecate a policy:\nDevelopers can simply remove the config files corresponding to that policy from the SVN repository. This will automatically start the counter (in a range of 60-90 days). This is to ensure that clients have sufficient time to either clone the policy or create a duplicate version of the policy if they need it or they can modify and retain the policy.\nWe can set the configuration of the policy from the UI and set a user defined counter which can be any number of days (even less than 60 days if needed). This can be useful in case there is a vendor deprecation or functionality deprecation in play.\nTwo scenarios can arise here:\nIf there is a violation, preserve the violation, disable the policy and under “Policy Violation” show that policy is deprecated. Additionally, the user is not allowed to re-enable them.\nIf there is no violation, remove it under “Policy Violation”.\n"},{"id":7,"href":"/doc/docs/example/hidden/","title":"Hidden","section":"Features Available","content":" This page is hidden in menu # Quondam non pater est dignior ille Eurotas # Latent te facies # Lorem markdownum arma ignoscas vocavit quoque ille texit mandata mentis ultimus, frementes, qui in vel. Hippotades Peleus pennas conscia cuiquam Caeneus quas.\nPater demittere evincitque reddunt Maxime adhuc pressit huc Danaas quid freta Soror ego Luctus linguam saxa ultroque prior Tatiumque inquit Saepe liquitur subita superata dederat Anius sudor Cum honorum Latona # O fallor in sustinui iussorum equidem. Nymphae operi oris alii fronde parens dumque, in auro ait mox ingenti proxima iamdudum maius?\nreality(burnDocking(apache_nanometer), pad.property_data_programming.sectorBrowserPpga(dataMask, 37, recycleRup)); intellectualVaporwareUser += -5 * 4; traceroute_key_upnp /= lag_optical(android.smb(thyristorTftp)); surge_host_golden = mca_compact_device(dual_dpi_opengl, 33, commerce_add_ppc); if (lun_ipv) { verticalExtranet(1, thumbnail_ttl, 3); bar_graphics_jpeg(chipset - sector_xmp_beta); } Fronde cetera dextrae sequens pennis voce muneris # Acta cretus diem restet utque; move integer, oscula non inspirat, noctisque scelus! Nantemque in suas vobis quamvis, et labori!\nvar runtimeDiskCompiler = home - array_ad_software; if (internic \u0026gt; disk) { emoticonLockCron += 37 + bps - 4; wan_ansi_honeypot.cardGigaflops = artificialStorageCgi; simplex -= downloadAccess; } var volumeHardeningAndroid = pixel + tftp + onProcessorUnmount; sector(memory(firewire + interlaced, wired)); "},{"id":8,"href":"/doc/docs/example/Synpr-Content/","title":"Synpr Content","section":"Features Available","content":" Synper Content # SNYPR Content is a set of out-of-the-box connectors, parsers, reports, dashboards, policies, and threat models for datasources that can be ingested and used in SNYPR. SNYPR 6.4 introduces Content Management to update and deploy content in a couple of steps. The Securonix content team has a master repository where they upload new content to share. Customers have their own local content repository in the file system located at \u0026ldquo;$SECURONIX_HOME/content/data\u0026rdquo;. Content administrators or detection engineers can efficiently download new updates and deploy new content in their SNYPR environment.\nExample # Connectors Connectors # SNYPR provides out-of-box connectors to import activity events from various datasources. Before you can setup the ingestion process, you have to check if an out-of-box connector is available for the datasource. There are three scenarios that can occur: The out-of-box connector is available. The out-of-box connector is available but parser is not available. The out-of-box connector is not available. Data Dictionary Data Dictionary # Data Dictionary simplifies the ingestion, analytics, and hunting processes by providing consistent and easy to understand labels for data ingested from various datasources. These labels provide uniformity to data ingested from multiple datasources within a functionality. Content developers can use these mapped labels to create policies that can be used for multiple datasources. This reduces the time and effort a content developer has to spend on creating policies for different datasources. Getting Started Commit Content # SNYPR content is categorized by functionality. Functionality is a category that defines a datasource type. For example: Web Proxy is a functionality and Blue Coat Proxy is a datasource. By categorizing datasources by functionality, SNYPR can apply similar parsers, policies, and threat models to all datasources with similar functionality. The functionality determines what content is available when you import the datasource. For a list of functionality supported by SNYPR, see Supported Functionality. "},{"id":9,"href":"/doc/docs/example/Synpr-Content/Connectors/","title":"Connectors","section":"Synpr Content","content":" Connectors # SNYPR provides out-of-box connectors to import activity events from various datasources. Before you can setup the ingestion process, you have to check if an out-of-box connector is available for the datasource. There are three scenarios that can occur:\nThe out-of-box connector is available. The out-of-box connector is available but parser is not available. The out-of-box connector is not available.\n"},{"id":10,"href":"/doc/docs/example/Synpr-Content/Data-dictionary/","title":"Data Dictionary","section":"Synpr Content","content":" Data Dictionary # Data Dictionary simplifies the ingestion, analytics, and hunting processes by providing consistent and easy to understand labels for data ingested from various datasources. These labels provide uniformity to data ingested from multiple datasources within a functionality.\nContent developers can use these mapped labels to create policies that can be used for multiple datasources. This reduces the time and effort a content developer has to spend on creating policies for different datasources. The unified labels help security analysts to get valuable context and query data efficiently in Spotter.\n"},{"id":11,"href":"/doc/docs/example/Synpr-Content/Getting_Started/","title":"Getting Started","section":"Synpr Content","content":" Commit Content # SNYPR content is categorized by functionality. Functionality is a category that defines a datasource type. For example: Web Proxy is a functionality and Blue Coat Proxy is a datasource. By categorizing datasources by functionality, SNYPR can apply similar parsers, policies, and threat models to all datasources with similar functionality.\nThe functionality determines what content is available when you import the datasource. For a list of functionality supported by SNYPR, see Supported Functionality.\nConnectors and Parsers A connector is used to bring data in SNYPR. The type of connector is called Collection Method. Each datasource can have multiple collection methods. You can use following types of connectors in SNYPR:\nAPI connections: Stream data from a datasource. Syslog event messages: Stream from a logging server or import as a file. File: Upload a delimited, Regex, JSON, etc. file from a local machine or RIN. Each connector includes a parser that normalizes data so it can be easily read and translated by a computer. The type of parser is called the Format. Some parsing techniques used in SNYPR are:\nDelimited fields (pipe, comma, etc) Capturing Groups Common Event Format (CEF) Key-Value Pair SNYPR 6.4 includes Data Dictionary that provides consistent and easy to understand labels for data ingested from various datasources. These labels provide uniformity to data ingested from multiple datasources within a functionality.\n"}]